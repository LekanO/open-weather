{"ast":null,"code":"var _jsxFileName = \"/Users/ant/Desktop/tests/open-weather/src/weather/Weather.tsx\";\nimport React from 'react';\nimport './Weather.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = _ref => {\n  let {\n    weather,\n    main,\n    sys,\n    name\n  } = _ref;\n  let sunrise;\n  let sunset;\n  const sunTimeData = {\n    sunrise: sys.sunrise,\n    sunset: sys.sunset\n  };\n  const sunRiseNsetArr = Object.values(sunTimeData);\n  const formatSunTime = sunTime => {\n    sunTime.forEach((sun, index) => {\n      const sunriseMilliseconds = sun * 1000;\n      const seconds = Math.floor(sunriseMilliseconds / 1000 % 60);\n      const minutes = Math.floor(sunriseMilliseconds / 1000 / 60 % 60);\n      const hours = Math.floor(sunriseMilliseconds / 1000 / 60 / 60 % 24);\n      const formattedSunTime = [hours.toString().padStart(2, \"0\"), minutes.toString().padStart(2, \"0\"), seconds.toString().padStart(2, \"0\")].join(\":\");\n      if (index === 0) {\n        return sunrise = formattedSunTime;\n      } else if (index === 1) {\n        return sunset = formattedSunTime;\n      }\n    });\n  };\n  formatSunTime(sunRiseNsetArr);\n  const tempToString = String(main === null || main === void 0 ? void 0 : main.temp);\n  const temperature = tempToString.substring(0, 2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Weather\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \" Today's Temperation \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [temperature, \" Celsius\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"\",\n          children: [\" Main weather for \", name, \" today is: \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" You should expect: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 34\n          }, this), \" \", weather[0].description, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Weather-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Sunrise is at: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 30\n          }, this), \" \", sunrise, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Sunset is at: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), \" \", sunset, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Weather","_ref","weather","main","sys","name","sunrise","sunset","sunTimeData","sunRiseNsetArr","Object","values","formatSunTime","sunTime","forEach","sun","index","sunriseMilliseconds","seconds","Math","floor","minutes","hours","formattedSunTime","toString","padStart","join","tempToString","String","temp","temperature","substring","className","children","fileName","_jsxFileName","lineNumber","columnNumber","description","_c","$RefreshReg$"],"sources":["/Users/ant/Desktop/tests/open-weather/src/weather/Weather.tsx"],"sourcesContent":["import React from 'react';\nimport { WeatherProps } from './types';\nimport './Weather.css';\n\nconst Weather: React.FC<WeatherProps> = ({\n  weather,\n  main,\n  sys,\n  name\n}) => {\n\n  let sunrise\n  let sunset\n\n  const sunTimeData = {\n    sunrise: sys.sunrise,\n    sunset: sys.sunset\n  }\n  const sunRiseNsetArr = Object.values(sunTimeData)\n\n  const formatSunTime = (sunTime: number[]) => {\n    sunTime.forEach((sun: number, index: number) => {\n      const sunriseMilliseconds = sun * 1000\n      const seconds = Math.floor((sunriseMilliseconds / 1000) % 60)\n      const minutes = Math.floor((sunriseMilliseconds / 1000 / 60) % 60)\n      const hours = Math.floor((sunriseMilliseconds / 1000 / 60 / 60) % 24)\n      const formattedSunTime = [\n        hours.toString().padStart(2, \"0\"),\n        minutes.toString().padStart(2, \"0\"),\n        seconds.toString().padStart(2, \"0\")\n      ].join(\":\")\n      if (index === 0) {\n        return sunrise = formattedSunTime\n      } else if (index === 1) {\n        return sunset = formattedSunTime\n      }\n    })\n  }\n\n  formatSunTime(sunRiseNsetArr)\n\n  const tempToString = String(main?.temp)\n  const temperature = tempToString.substring(0,2)\n  return (\n    <div className=\"Weather\">\n      <div className='Weather-main'>\n        <div className='Weather-info'>\n          <h4> Today's Temperation </h4>\n          <p>{temperature} Celsius</p>\n        </div>\n        <div className='Weather-info'>\n          <h6 className=''> Main weather for {name} today is: </h6>\n          <p>{weather[0].main}</p>\n          <p> You should expect: <br /> {weather[0].description} </p>\n        </div>\n        <div className='Weather-info'>\n          <p> Sunrise is at: <br /> {sunrise} </p>\n          <p> Sunset is at: <br /> {sunset} </p>\n        </div>\n      </div>\n    </div>\n  )\n};\n\n\n\nexport default Weather;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
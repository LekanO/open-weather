{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from 'axios';\nexport const useAxios = function (config) {\n  _s();\n  let loadOnStart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  //state variables\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (loadOnStart) sendRequest();else setLoading(false);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const request = () => {\n    sendRequest();\n  };\n  const sendRequest = () => {\n    setLoading(true);\n    axios(config).then(response => {\n      setError('');\n      setData(response.data);\n    }).catch(error => {\n      setError(error.response.data.message);\n      setData(undefined);\n    }).finally(() => setLoading(false));\n  };\n  return [loading, data, error, request];\n};\n_s(useAxios, \"d40o6cqI7aCuk0PJwRs0pV/D5Xg=\");","map":{"version":3,"names":["useEffect","useState","axios","useAxios","config","_s","loadOnStart","arguments","length","undefined","loading","setLoading","data","setData","error","setError","sendRequest","request","then","response","catch","message","finally"],"sources":["/Users/ant/Desktop/tests/open-weather/src/utils/useAxios.ts"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport axios, { AxiosRequestConfig } from 'axios'\n\nexport const useAxios = <T>(\n    config: AxiosRequestConfig<any>,\n    loadOnStart: boolean = true):\n    [boolean, T | undefined, string, () => void] => {\n    //state variables\n    const [ loading, setLoading ] = useState(true)\n    const [ data, setData ] = useState<T>()\n    const [ error, setError ] = useState('')\n    \n    useEffect(() => {\n        if (loadOnStart) sendRequest()\n        else setLoading(false)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const request = () => {\n        sendRequest()\n    }\n\n    const sendRequest = () => {\n        setLoading(true)\n        \n        axios(config)\n            .then(response => {\n                setError('')\n                setData(response.data)\n            })\n            .catch(error => {\n                setError(error.response.data.message)\n                setData(undefined)\n            })\n            .finally(() => setLoading(false))\n    }\n\n    return [loading, data, error, request]\n}"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAA8B,OAAO;AAEjD,OAAO,MAAMC,QAAQ,GAAG,SAAAA,CACpBC,MAA+B,EAEiB;EAAAC,EAAA;EAAA,IADhDC,WAAoB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EAE3B;EACA,MAAM,CAAEG,OAAO,EAAEC,UAAU,CAAE,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAEW,IAAI,EAAEC,OAAO,CAAE,GAAGZ,QAAQ,EAAK;EACvC,MAAM,CAAEa,KAAK,EAAEC,QAAQ,CAAE,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,IAAIM,WAAW,EAAEU,WAAW,EAAE,MACzBL,UAAU,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,OAAO,GAAGA,CAAA,KAAM;IAClBD,WAAW,EAAE;EACjB,CAAC;EAED,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACtBL,UAAU,CAAC,IAAI,CAAC;IAEhBT,KAAK,CAACE,MAAM,CAAC,CACRc,IAAI,CAACC,QAAQ,IAAI;MACdJ,QAAQ,CAAC,EAAE,CAAC;MACZF,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;IAC1B,CAAC,CAAC,CACDQ,KAAK,CAACN,KAAK,IAAI;MACZC,QAAQ,CAACD,KAAK,CAACK,QAAQ,CAACP,IAAI,CAACS,OAAO,CAAC;MACrCR,OAAO,CAACJ,SAAS,CAAC;IACtB,CAAC,CAAC,CACDa,OAAO,CAAC,MAAMX,UAAU,CAAC,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,OAAO,CAACD,OAAO,EAAEE,IAAI,EAAEE,KAAK,EAAEG,OAAO,CAAC;AAC1C,CAAC;AAAAZ,EAAA,CAnCYF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}